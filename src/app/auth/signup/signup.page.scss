$instructionsCol:#323A5D;
$color-primary: #0E237E;
$color-primaryOp: #0E237E;
$color-bg: #F9F9FA;
$signupbtnbg: #F9F9FA;
$placeholderCol:  rgba(50, 58, 93, 0.6);
$border-col: rgba(24, 25, 26, 0.2);

ion-content, ion-toolbar {
  // --ion-background-color: $color-bg;
  --padding-start: 0px;
  --padding-end: 0px;
}

ion-header{
  ion-toolbar{
    --background: #fafafa;
  }
}

.my-content{
  --background: #fafafa;
}


.nav-header{
    display: flex;
    align-items: center;
    justify-content: space-between;
    // color: $color-transaction;
    padding: 0px 0px 5px;
    position: static;

    .nav-arrow{
        text-align: center;
        margin-top: 13px;
        outline: none;
        z-index: 10;
        // background: red;
    }
    .nav-arrow:active{
        outline: none;
        transform: translateY(1px);
        background: rgba(48, 47, 47, 0.1);
        border-radius: 50%;
    }
}

.is-invalid{
    border: 2px solid red !important;
  }
  
  .label-invalid{
    &[placeholder] {
      &[alt] {
        &:before {
          color: red !important;
        }
      }
    }
  }
  
  .d-none{
    display: none;
  }
  
  .custom{
      padding: 1rem 2rem;
  }
  
  .nav-header{
      display: flex;
      align-items: center;
      justify-content: space-between;
      // color: $color-transaction;
      padding: 0px 0px 5px;
      position: static;
  
      .nav-arrow{
          text-align: center;
          margin-top: 13px;
          outline: none;
          z-index: 10;
          // background: red;
      }
      .nav-arrow:active{
          outline: none;
          transform: translateY(1px);
          background: rgba(48, 47, 47, 0.1);
          border-radius: 50%;
      }
  }
  
  .instruction-container {
      margin-top: 1rem;
      color: $instructionsCol;
  
      h4{
          // font-family: 'poppins-bold';
          font-weight: 900;
          color: $instructionsCol;
      }
     
  }
  
  .form-container{
      width: 100%;
      padding: 5px;
      max-width: 400px;
      align-items: center;
      margin: 0 auto;
      margin-top: 1rem;
  }
  
  .input-container{
    position: relative;
    // height: 4rem;
    .identity-input{
      margin: 5px 0px 0px 0px;
    }
    .prompt {
      position: absolute;
      left: 50%;
      color: red;
      font-size: 10px;
      padding: 2px;
      // margin: 0px 0px 20px 0px;
      transform: scaleX(1.25);
      transition: all 0.5s ease-in-out;
      animation: sweepright cubic-bezier(0.785, 0.135, 0.15, 0.86) 800ms forwards;
    }
  
    .pw-prompt {
      background: rgba(255,255,255, 0.8);
      position: absolute;
      left: 50%;
      color: red;
      font-size: 10px;
      padding: 10px;
      border-radius: 40px;
      // margin: 0px 0px 20px 0px;
      margin-top: 5px;
      transform: scaleX(1.25);
      transition: all 0.5s ease-in-out;
      animation: sweepright cubic-bezier(0.785, 0.135, 0.15, 0.86) 800ms forwards;
    }
  }
  
  .password-major{
    
      display: flex;
      align-items: center;
      justify-content: space-between;
      border: 1px solid $border-col;
      border-radius: 4px;
      outline: none;
      margin-bottom: 1rem;
    
      .password-input{
        height: calc(3em + 2px);
  
        input{
          &[type="text"]{
            border: 1px solid $color-bg;
          }
        }
      }
  
      .pwd-visible{
        // background: url('../../../../assets/icon/login-icns/hidden-eye-dark.svg') no-repeat center;
        border: none;
        outline: none;
        width: 30px;
        height: 30px;
      }
  
      .pwd-hidden{
        // background: url('../../../../assets/icon/login-icns/visible.svg') no-repeat center;
        width: 30px;
        height: 30px;
      }
    
      .image-holder{
        height: calc(3em + 2px);
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        outline: none;
        
        img{
          margin: auto 10px;
          // padding-right: 10px;
          outline: none;
        }
      }
    }
  
    .password-major:focus-within{
      border-color: $color-primary;
      transition-duration: .2s;
    }
    
    .button-container{
      // transform: translate3d(0, 20vh, 0);
      display: flex;
      flex-direction: column;
      width: 100%;
      text-align: center;
      margin: auto;
     
      button{
        width: 100%;
        height: calc(3em + 2px);
        margin-top: 15px;
      //   border-radius: 5px;
        outline: none;
    }
    
  
      #login-btn {
          background-color: $color-bg;
          color: $color-primary;
          border: 3px solid $color-primaryOp;
          border-radius: 5px;
      }
    }
  
    .caveat{
        margin-top: 1rem;
        p{
            font-size: 13px;
            color: $instructionsCol;
        }
        ion-label{
            font-size: 13px;
            color: $instructionsCol;
        }
        ion-checkbox {
          --border-radius: 0px;
          --size: 16px;
        }
    }
    
  
  @mixin calc($property, $value) {
      #{$property}: -webkit-calc(#{$value});
      #{$property}:         calc(#{$value});
    }
    
    // First, pass in the important variables.
    @mixin adaptive-placeholder($height, $radius, $margin: 1em, $border: 1px) {
      $borders: ($border * 2); // <- To avoid repeating below
      box-sizing: border-box;  // <- Important for accurate sizing
      width: 100%;             // <- Could be almost anything
      @include calc(height, '#{$height} + #{$borders}'); 
      margin: 0 0 $margin;
      padding: $margin;
      border: $border solid $border-col;
      border-radius: $radius;
      background: transparent;
      resize: none;  // <- For textareas
      outline: none; // <- Because ugly
      //
      // Following block controls all the color change
      //
      &[required] {
        &:focus {
          border-color: $color-primary;
          + label {
            &[placeholder] {
              &:before {
                color: $color-primary;
              }
            }
          }
        }
        //
        // Following block selects label directly adjacent toinput
        //
        &:focus,
        &:valid {
          + label {
            &[placeholder] {
              &:before {
                transition-duration: .2s;
                //
                // Following lines move placeholder out of the way
                //
                transform: translate(0, ($margin * -1.5)) scale(.9, .9);
              }
            }
          }
        }
        //
        // Following block injects string from label's 'alt' attr.
        // It comes before the other 'content' property so I can
        // override it. Uses "invalid" pseudo-selector to know
        // when to do that.
        //
        &:invalid {
          + label {
            &[placeholder] {
              &[alt] {
                &:before {
                  content: attr(alt); // Content property 1 of 2
                }
              }
            }
          }
        }
        + label {
          &[placeholder] {
            display: block;
            pointer-events: none; // Allows clicking thru label
            line-height: $margin;
            // Following pulls label into position
            @include calc(margin-top, '-#{$height} - #{$borders}');
            // Following offsets that above
            @include calc(margin-bottom, '(#{$height} - #{$margin}) + #{$borders}');
            //
            // Following ':before' is needed to switch between
            // different strings.
            //
            &:before {
              content: attr(placeholder); // Content property 2 of 2
              display: inline-block;
              margin: 0;
              @include calc(margin-left, '#{$margin} + #{$borders}');
              @include calc(margin-right, '#{$margin} + #{$borders}');
              padding: 0 2px;
              color: $placeholderCol;
              white-space: nowrap;
              transition: .3s ease-in-out;
              //
              // Following lines lets me use solid color as bkg img.
              // This lets me size bkg to something more sublte
              //
              // background-image: linear-gradient(to bottom, #fff, #fff);
              background-color: $color-bg;
              background-size: 100% 5px;
              background-repeat: no-repeat;
              background-position: center;
            }
          }
        }
      }
    }
    //
    // Following block is how I call the above function
    //
    input {
      $height: 3em; 
      &[type="text"]  {
        @include adaptive-placeholder($height, 4px);
      //   color: $placeholderCol;
      }
      color: $placeholderCol;
    }
  
    input {
      $height: 3em; 
      &[type="tel"]  {
        @include adaptive-placeholder($height, 4px);
      //   color: $placeholderCol;
      }
      color: $placeholderCol;
    }
  
    input {
      $height: 3em; 
      &[type='password'] {
        @include adaptive-placeholder($height, 4px, $border: 0px);
      //   &:focus-within .password-major {
      //     border-color: $color-primary;
      //     // transition-duration: .2s;
      //     }
        }
    }
  
    @keyframes sweepright {
      from {
        transform: scaleX(0);
      }
      to {
        transform: scaleX(1);
      }
    }

.parent {
  padding: 20px;
  background-color: #fafafa;
  height: 100%;
  width: 100%;
}